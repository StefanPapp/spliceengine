Plan
Cursor(n=26,rows=100,updateMode=READ_ONLY (1),engine=Spark)
  ->  ScrollInsensitive(n=25,totalCost=123932.417,outputRows=100,outputHeapSize=7.924 MB,partitions=8)
    ->  Limit(n=24,totalCost=123090.703,outputRows=100,outputHeapSize=7.924 MB,partitions=8,offset=0,fetchFirst=100)
      ->  OrderBy(n=23,totalCost=123090.703,outputRows=100,outputHeapSize=7.924 MB,partitions=8)
        ->  ProjectRestrict(n=22,totalCost=4.006,outputRows=1,outputHeapSize=7.924 MB,partitions=8)
          ->  BroadcastJoin(n=21,totalCost=85170.722,outputRows=25922,outputHeapSize=7.924 MB,partitions=8,preds=[(N_REGIONKEY[36:17] = R_REGIONKEY[36:20])])
            ->  TableScan[REGION(1696)](n=20,totalCost=4.006,outputRows=1,outputHeapSize=7.924 MB,partitions=8,preds=[(R_NAME[34:2] = EUROPE)])
            ->  MergeSortJoin(n=19,totalCost=85162.706,outputRows=129609,outputHeapSize=39.618 MB,partitions=8,preds=[(P_PARTKEY[32:4] = AggFlatSub-0-1.PS_PARTKEY[32:19]),(PS_SUPPLYCOST[32:3] = AggFlatSub-0-1.SQLCol1[32:18])])
              ->  ProjectRestrict(n=18,totalCost=4.006,outputRows=1,outputHeapSize=12.891 MB,partitions=8)
                ->  GroupBy(n=17,totalCost=296.445,outputRows=160000,outputHeapSize=12.891 MB,partitions=8)
                  ->  ProjectRestrict(n=16,totalCost=4.006,outputRows=1,outputHeapSize=12.891 MB,partitions=8)
                    ->  BroadcastJoin(n=15,totalCost=296.445,outputRows=160000,outputHeapSize=12.891 MB,partitions=8,preds=[(N_REGIONKEY[26:7] = R_REGIONKEY[26:8])])
                      ->  TableScan[REGION(1696)](n=14,totalCost=4.006,outputRows=1,outputHeapSize=12.891 MB,partitions=8,preds=[(R_NAME[24:2] = EUROPE)])
                      ->  BroadcastJoin(n=13,totalCost=288.429,outputRows=800000,outputHeapSize=64.453 MB,partitions=8,preds=[(S_NATIONKEY[22:5] = N_NATIONKEY[22:6])])
                        ->  TableScan[NATION(1712)](n=12,totalCost=4.03,outputRows=25,outputHeapSize=64.453 MB,partitions=8)
                        ->  BroadcastJoin(n=11,totalCost=280.138,outputRows=800000,outputHeapSize=64.452 MB,partitions=8,preds=[(S_SUPPKEY[18:4] = PS_SUPPKEY[18:2])])
                          ->  TableScan[SUPPLIER(1664)](n=10,totalCost=15.9,outputRows=10000,outputHeapSize=64.452 MB,partitions=8)
                          ->  TableScan[PARTSUPP(1648)](n=9,totalCost=1252,outputRows=800000,outputHeapSize=64.087 MB,partitions=8)
              ->  BroadcastJoin(n=8,totalCost=509.656,outputRows=11101,outputHeapSize=2.289 MB,partitions=8,preds=[(S_NATIONKEY[12:11] = N_NATIONKEY[12:15])])
                ->  TableScan[NATION(1712)](n=7,totalCost=4.03,outputRows=25,outputHeapSize=2.289 MB,partitions=8)
                ->  MergeSortJoin(n=6,totalCost=501.36,outputRows=11101,outputHeapSize=2.288 MB,partitions=8,preds=[(S_SUPPKEY[8:8] = PS_SUPPKEY[8:2])])
                  ->  TableScan[SUPPLIER(1664)](n=5,totalCost=15.9,outputRows=10000,outputHeapSize=2.288 MB,partitions=8)
                  ->  MergeJoin(n=4,totalCost=388.56,outputRows=11101,outputHeapSize=1.01 MB,partitions=8,preds=[(P_PARTKEY[4:4] = PS_PARTKEY[4:1])])
                    ->  ProjectRestrict(n=3,totalCost=228.178,outputRows=2582,outputHeapSize=1.01 MB,partitions=8,preds=[like(P_TYPE[2:3], %BRASS)])
                      ->  TableScan[PART(1680)](n=2,totalCost=228,outputRows=3651,outputHeapSize=1.01 MB,partitions=8,preds=[(P_SIZE[2:4] = 15)])
                    ->  TableScan[PARTSUPP(1648)](n=1,totalCost=1252,outputRows=800000,outputHeapSize=64.087 MB,partitions=8)
